##Class 
# Account has vr 'balance', deposit(), withdraw()

class Account :
    balance = 10000
    def deposit(self, amount): 
        self.balance += amount
    def withdraw (self, amount): #self= 메소드에서 넣을 변수값
        self.balance -= amount 


### 대문자는 클래스 Account 를, 소문자는 함수를 불러옴.
## 객체생성 (메모리 사용)
acc1= Account()
#Account() *2 또는 +/- 3000 생성 불가/
acc2= Account()


#객체.변수 로 호출하기
acc1.balance ##100000


#메소드 호출 : 코드를 맞춤실행
acc1.deposit(2500)
acc2.withdraw(3500)
acc1.balance, acc2.balance


#balance를 쓸때마다 바꾸려면?
acc1.balance = 9500 #강제 변환


#객체의 데이터 확인?
dir(acc1)[-4],dir(acc1)[-3] 
dir(acc1)[-3] 


#<Special method : 앞뒤로 __ 가 붙은 메소드>
객체 변수의 초기값 생성
#SELF "__init()__ 사용법"
class Account_nb :
    def __init__ (self, balance): #초기값
        self.balance = balance
    def deposit(self, amount): 
        self.balance += amount
    def withdraw (self, amount): #self= 메소드에서 넣을 변수값
        self.balance -= amount 

accnb1=Account_nb(2000)
accnb2=Account_nb(35000)
accnb1.balance, accnb2.balance #2000,35000

accnb2.withdraw(5000)
accnb2.balance  #30000


#dir






